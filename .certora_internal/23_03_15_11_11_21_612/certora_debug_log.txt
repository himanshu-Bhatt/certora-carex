Saving last configuration file to /home/himanshu/certora/Secureum_Staking_Rewards/.certora_internal/23_03_15_11_11_21_612/.last_confs/last_conf_15_03_2023__11_11_21.conf
contract name StakingRewardsHarness is the same as the file name and can be omitted from harness/StakingRewardsHarness.sol:StakingRewardsHarness
Default package file package.json not found, external contract dependencies could be unresolved. Ignore if solc invocation was successful
setting cache key to ./DummyERC20A.sol-./DummyERC20B.sol-./harness/StakingRewardsHarness.sol:StakingRewardsHarness-optimisticFalse-iterNone
parsed args successfully.
args= CertoraContext(files=['./DummyERC20A.sol', './DummyERC20B.sol', './harness/StakingRewardsHarness.sol:StakingRewardsHarness'], verify=['StakingRewardsHarness:spec/StakingRewards.spec'], assert_contracts=None, bytecode_jsons=None, bytecode_spec=None, msg=None, rule=None, multi_assert_check=False, include_empty_fallback=False, rule_sanity=None, short_output=False, typecheck_only=False, send_only=False, solc='/home/himanshu/.local/bin/solc', solc_args=None, solc_map=None, path='/home/himanshu/certora/Secureum_Staking_Rewards', optimize=None, optimize_map=None, packages_path='/home/himanshu/certora/Secureum_Staking_Rewards/node_modules', packages=None, optimistic_loop=False, loop_iter=None, method=None, cache='./DummyERC20A.sol-./DummyERC20B.sol-./harness/StakingRewardsHarness.sol:StakingRewardsHarness-optimisticFalse-iterNone', smt_timeout=None, link=['StakingRewardsHarness:rewardsToken=DummyERC20B', 'StakingRewardsHarness:stakingToken=DummyERC20A'], address={}, struct_link=None, prototype=None, dynamic_bound=None, dynamic_dispatch=False, debug=None, debug_topics=False, jar=None, java_args=None, check_args=False, build_only=False, build_dir=None, disableLocalTypeChecking=False, no_compare=False, expected_file='expected.json', queue_wait_minutes=None, max_poll_minutes=None, log_query_frequency_seconds=None, max_attempts_to_fetch_output=None, delay_fetch_output_seconds=None, process='emv', settings=None, log_branch=None, disable_auto_cache_key_gen=False, max_graph_depth=None, tool_output=None, internal_funcs=None, coinbaseMode=False, get_conf=None, skip_payable_envfree_check=False, staging=None, cloud=None, mode=<Mode.VERIFY>, conf_file='last_conf_15_03_2023__11_11_21.conf', contracts={'StakingRewardsHarness', 'DummyERC20A', 'DummyERC20B'}, file_paths={'harness/StakingRewardsHarness.sol', 'DummyERC20B.sol', 'DummyERC20A.sol'}, file_to_contract={'DummyERC20A.sol': {'DummyERC20A'}, 'DummyERC20B.sol': {'DummyERC20B'}, 'harness/StakingRewardsHarness.sol': {'StakingRewardsHarness'}}, contract_to_file={'DummyERC20A': 'DummyERC20A.sol', 'DummyERC20B': 'DummyERC20B.sol', 'StakingRewardsHarness': 'harness/StakingRewardsHarness.sol'}, verified_contract_files=['harness/StakingRewardsHarness.sol'], spec_files=['spec/StakingRewards.spec'], local=False, domain='https://prover.certora.com', user_defined_cache=False)
There is no TAC file. Going to script EVMVerifier/certoraBuild.py to main_with_args()
Creating dir /home/himanshu/certora/Secureum_Staking_Rewards/.certora_internal/23_03_15_11_11_21_612/.certora_config
In /home/himanshu/certora/Secureum_Staking_Rewards/spec/StakingRewards.spec, found the imports: [('./erc20.spec', '1:1')]
In /home/himanshu/certora/Secureum_Staking_Rewards/spec/erc20.spec, found the imports: []
copying spec file /home/himanshu/certora/Secureum_Staking_Rewards/spec/StakingRewards.spec to /home/himanshu/certora/Secureum_Staking_Rewards/.certora_internal/23_03_15_11_11_21_612/.certora_config/0_StakingRewards.spec.spec
writing /home/himanshu/certora/Secureum_Staking_Rewards/.certora_internal/23_03_15_11_11_21_612/.certora_verify.json
running ['java', '-jar', '/usr/local/lib/python3.10/dist-packages/certora_jars/Typechecker.jar', '-v', '.certora_internal/23_03_15_11_11_21_612/.certora_verify.json', '-m', '.certora_internal/23_03_15_11_11_21_612/.certora_metadata.json', '-d', '.certora_internal/23_03_15_11_11_21_612']
[main] ERROR ALWAYS - spec/StakingRewards.spec:62:33: Syntax error: unexpected token near {
[main] ERROR ALWAYS - spec/StakingRewards.spec:62:33: Couldn't repair and continue parse unexpected token near {
[main] ERROR ALWAYS - CVL parser failed with exception. Exception message: "Failed to parse spec/StakingRewards.spec. Exiting."
spec.CVLAstBuilder$CVLParsingException: java.lang.Exception: Failed to parse spec/StakingRewards.spec. Exiting.
build failed
Failure traceback: 
Shared.certoraUtils.CertoraUserInputError: Syntax error in specification file
Encountered an error running Certora Prover:
Syntax error in specification file
